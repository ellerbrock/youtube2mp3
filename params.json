{
  "name": "youtube 2 mp3",
  "tagline": "yet another youtube downloader",
  "body": "# youtube2mp3 [![Open Source Love](https://badges.frapsoft.com/os/v1/open-source.svg?v=102)](https://github.com/ellerbrock/open-source-badge/) [![Gitter Chat](https://badges.gitter.im/frapsoft/frapsoft.svg)](https://gitter.im/frapsoft/frapsoft/)\r\n\r\nSimple Shell Script to download Youtube Videos and convert them on the fly to mp3 files.\r\n\r\n## Install Dependencies\r\n\r\n**via Homebrew**\r\n\r\n`brew install youtube-dl ffmpeg libav`\r\n\r\nor\r\n\r\n**from Source**\r\n\r\n-   [youtube-dl](https://github.com/rg3/youtube-dl)\r\n-   [ffmpeg](https://github.com/FFmpeg/FFmpeg)\r\n-   [libav](https://github.com/libav/libav)\r\n\r\nWith the dependencies installed your ready to go.\r\n\r\nDownload the Script [ydl.sh](https://raw.githubusercontent.com/ellerbrock/youtube2mp3/master/ydl.sh) and make it executable `chmod u+x ydl.sh`\r\n\r\n> Run the Script via: `./ydl.sh url`<br>\r\n> url can be a youtube link, playlist, channel ...\r\n\r\nBy default the mp3 files are stored in the same folder where the script was executed.\r\n\r\nYou can create an alias to run the script from everywhere: `alias ydl=\"/src/to/file/ydl.sh\"`\r\n\r\nThats it happy downloading!\r\n\r\n![unicorn love](http://i.giphy.com/l0LIYv9tJFIVHxF5u.gif)\r\n\r\n### Source\r\n\r\n```bash\r\n#!/usr/bin/env bash\r\n#\r\n#   /$$$$$$$$                                                /$$$$$$   /$$\r\n#  | $$_____/                                               /$$__  $$ | $$\r\n#  | $$     /$$$$$$  /$$$$$$   /$$$$$$   /$$$$$$$  /$$$$$$ | $$  \\__//$$$$$$\r\n#  | $$$$$ /$$__  $$|____  $$ /$$__  $$ /$$_____/ /$$__  $$| $$$$   |_  $$_/\r\n#  | $$__/| $$  \\__/ /$$$$$$$| $$  \\ $$|  $$$$$$ | $$  \\ $$| $$_/     | $$\r\n#  | $$   | $$      /$$__  $$| $$  | $$ \\____  $$| $$  | $$| $$       | $$ /$$\r\n#  | $$   | $$     |  $$$$$$$| $$$$$$$/ /$$$$$$$/|  $$$$$$/| $$       |  $$$$/\r\n#  |__/   |__/      \\_______/| $$____/ |_______/  \\______/ |__/        \\___/\r\n#                            | $$\r\n#                            | $$\r\n#                            |__/\r\n#\r\n#   Developer     Maik Ellerbrock\r\n#   GitHub        https://github.com/ellerbrock\r\n#   Twitter       https://twitter.com/frapsoft\r\n#   Facebook      https://facebook.com/frapsoft\r\n#\r\n#   Version       1.1.0\r\n#\r\n#   Dependencies: brew install youtube-dl ffmpeg libav\r\n#\r\n\r\n# CONFIGURATION\r\nBASEDIR=\"/Volumes/Media/Music\"\r\nMP3DIR=\"$BASEDIR/youtube/\"\r\nLOGFILE=\"$BASEDIR/youtube.log\"\r\nDATE=`date +%Y-%m-%d`\r\n\r\nif [ ! \"$1\" ]; then\r\n  echo \"usage: ydl.sh youtube-url\"\r\n  exit 1\r\nfi\r\n\r\ncd $MP3DIR\r\necho -e \"$DATE \\t $1\" >> $LOGFILE\r\nyoutube-dl --extract-audio --audio-format mp3 --audio-quality 0 --ignore-errors $@\r\n\r\nif [ `uname` == \"Darwin\" ] ; then\r\n  osascript -e 'display notification \"All Downloads done.\" with title \"Youtube Downloader\"'\r\n  open .\r\nfi\r\n```\r\n\r\n### Contact / Social Media\r\n\r\n*Get the latest News about Web Development, Open Source, Tooling, Server & Security*\r\n\r\n[![Twitter](https://github.frapsoft.com/social/twitter.png)](https://twitter.com/frapsoft/)\r\n[![Facebook](https://github.frapsoft.com/social/facebook.png)](https://www.facebook.com/frapsoft/)\r\n[![Google+](https://github.frapsoft.com/social/google-plus.png)](https://plus.google.com/116540931335841862774)\r\n[![Gitter](https://github.frapsoft.com/social/gitter.png)](https://gitter.im/frapsoft/frapsoft/)\r\n[![Github](https://github.frapsoft.com/social/github.png)](https://github.com/ellerbrock/)\r\n\r\n### Development by \r\n\r\nDeveloper / Author: [Maik Ellerbrock](https://github.com/ellerbrock/)  \r\nCompany: [Frapsoft](https://github.com/frapsoft/)\r\n\r\n\r\n### License \r\n\r\nCopyright (c) 2016 [Maik Ellerbrock](https://github.com/ellerbrock/)  \r\n\r\n[![MIT Licence](https://badges.frapsoft.com/os/mit/mit-125x28.png?v=102)](https://opensource.org/licenses/mit-license.php)  \r\n\r\n",
  "note": "Don't delete this file! It's used internally to help with page regeneration."
}